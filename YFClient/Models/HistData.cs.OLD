using System;
using System.Collections.Generic;
using System.Collections;
using System.Diagnostics;
using System.Runtime.Serialization;

namespace YFClient.Models
{

    //[Serializable]
    [DataContract]
    public class HistData //: ISerializable
    {
        [DataMember]
        //public Hashtable QuotesHist { get; set; }

        public Dictionary<string, QuoteHistData> QuotesHist { get; set; }
        //public Dictionary<string, object> QuotesHist { get; set; }


        [IgnoreDataMember]
        public string JSonTxt { get; set; }


        public HistData()
        {
            //QuotesHist = new Dictionary<string, object>();

            //QuotesHist = new Dictionary<string, QuoteHistData>();
            //QuotesHist = new Hashtable();

        }
        //protected HistData(SerializationInfo info, StreamingContext context)
        //{
        //    QuotesHist = new Dictionary<string, QuoteHistData>();
        //    foreach (var entry in info)
        //    {
        //        Debug.Assert( entry.GetType() == typeof(QuoteHistData) );
        //        QuoteHistData val = entry.Value as QuoteHistData;
        //        QuotesHist.Add(entry.Name, val);
        //    }
        //}
        //public void GetObjectData(SerializationInfo info, StreamingContext context)
        //{
        //    foreach (string key in this.QuotesHist.Keys)
        //    {
        //        info.AddValue(key, QuotesHist[key], typeof(QuoteHistData));
        //    }
        //}


        //public HistData()
        //{
        //    QuotesHist = new Dictionary<string, QuoteHistData>();
        //}
    }

}
